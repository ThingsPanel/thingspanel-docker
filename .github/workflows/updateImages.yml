name: Check Tags and Sync Docker Images

on:
  schedule:
    - cron: '0 1 * * *'  # 每小时检查一次（可根据需要修改）
  workflow_dispatch:  # 允许手动触发

jobs:
  check-tags:
    runs-on: ubuntu-latest

    steps:
      - name: Check for new tags in repositories
        id: check_tags
        run: |
          declare -A repositories
          repositories=(
                ["ThingsPanel/thingspanel-backend-community"]="thingspanel-go"
                ["ThingsPanel/thingspanel-frontend-community"]="thingspanel-vue"
          )          
          new_tags=""

          for repo in "${!repositories[@]}"; do
            echo "Checking tags for $repo"
            tags=$(gh api repos/$repo/tags --jq '.[].name')
            latest_tag=$(echo "$tags" | sort -V | tail -n 1)
            echo $tags
            if [ "$latest_tag" != "" ]; then
              echo "New tag found in $repo: $latest_tag"
              new_tags="$new_tags ${repositories[$repo]}:$latest_tag"
            else
              echo "No new tags in $repo"
            fi
          done
          echo "new_tags=$new_tags" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ github.token }}

      #执行镜像工作流
      #- name: Trigger image build for new tags
      #  if: env.new_tags != ''  # 仅在找到新标签时执行
      #  run: |
      #    IFS=' ' read -r -a tags_array <<< "$new_tags"
      #    for tag in "${tags_array[@]}"; do
      #      repo=${tag%:*}
      #      tag_name=${tag#*:}

      #      echo "Triggering image build for $repo with tag $tag_name"
      #      curl -X POST \
      #        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
      #        -H "Accept: application/vnd.github.v3+json" \
      #        "https://api.github.com/repos/$repo/actions/workflows/build.yml/dispatches" \
      #        -d "{\"ref\":\"$tag_name\"}"  # 假设工作流使用标签名作为 ref
      #    done
      
      #检查仓库镜像

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Jihulab Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          registry: registry.jihulab.com
          username: ${{ secrets.JH_USER }}
          password: ${{ secrets.JH_PASS }}
          logout: false

      - name: Use Skopeo Tools Sync Image to Jihulab Docker Hub2
        if: env.new_tags != ''
        run: |
          IFS=' ' read -r -a tags_array <<< "$new_tags"
          for tag in "${tags_array[@]}"; do
            existing_tags=$(skopeo list-tags docker://registry.jihulab.com/thingspanel/docker-images)
            if [[ $existing_tags == *"$tag"* ]]; then
                echo "The image $tag already exists,skipping the copy."
            else
                echo $tag
                #skopeo copy "docker://ghcr.io/thingspanel/$tag" "docker://registry.jihulab.com/thingspanel/docker-images/$tag"
            fi
          done
